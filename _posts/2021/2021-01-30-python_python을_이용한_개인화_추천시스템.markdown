---
layout: post
title: "python을 이용한 개인화 추천시스템"
date: 2021-01-30 19:20:23 +0900
use_math: true
category: python_deeplearning_chatbot
comments: true
---

# 책 - python을 이용한 개인화 추천시스템 <br>

책 관련 코드 링크 : http://www.crbooks.co.kr/main/ -> 책 및 데이터 홈페이지에서 다운로드 가능 

책이 코드 위주라 필기할 내용이 거의 없음 

-> 



## 1장 추천 시스템(recommender system) 



추천 시스템 : 사용자의 과거 행동 데이터나 다른 데이터를 바탕으로 사용자에게 필요한 정보나 제품을 골라서 제시해주는 시스템



### 주요 추천 알고리즘

- 협업 필터링(Collaborative Filtering: CF)

아이탬에 대한 소비자의 평가를 받아 평가 패턴이 비슷한 소비자를 한 집단으로 클러스터링

-> 집단의 취향을 활용하는 기술

- 내용 기반 필터링(Content-Based filtering: CB)

제품의 내용을 분석해서 추천하는 기술, 제품 중 텍스트 정보가 많은 제품을 분석하여 추천할 때 많이 사용

- 지식 기반 필터링(Knowledge-Based filtering: KB)

협업, 내용기반 필터링은 왜 그제품을 조아하는지 이유를 알 수 없는 문제가 있음

지식 기반 필터링은 특정 분야 전문가의 도움을 받아서 그 분야에 대한 전체적인 지식구조를 만들어서 이를 활용하는 방법

- 딥러닝(Deep Learning: DL) 추천 기술

다양한 사용자 아이템의 특징값(feature)을 사용하여 선호도를 구하는것



-> 실제로는 추천 시스템을 구축할 때는 한 가지만 사용하지 않고 여러가지를 사용함.



## 3. 협업 필터링 추천 시스템

아이탬에 대해서 비슷한 취향을 가진 사람들은 다른 아이탬에 대해서도 비슷한 취향을 가지고 있을거라는 가정에서 시작

취향이 비슷한 사람(neighbor)을 찾아 공통적으로 좋아하는 제품 서비스를 추천 대상인 사람에게 추천

- 유사도 지표

> 1. 상관계수 : 이해하기 쉬운 유사도 측정치
>
> 2. 코사인 유사도 : 이진값을 가진 상관계수는 코사인 유사도로 사용할 수 없음
> 3. 타니모토 계수 : 이진값 유사도를 측정하기 위해 사용 

- 기본 CF 알고리즘

> 1. 모든 사용자 간의 유사도를 계산
>
> 2. 추천 대상이 되는 사람과 다른 유저의 유사도 계산
>
> 3. 사용자가 평가하지 않은 모든 값에 대해서 예상값을 구한다.
>
>    (유사도를 사용하여 가중치 평균)
>
> 4. 가장 높은 n개의 아이템을 선정

- 사용자의 평가경향을 고려한 CF

> cf의 정확도를 더 올리기 위해 사용자의 평가경향(user bias)을 고려해서 예측치를 조정하는 것
>
> 평가 경향을 고려하지 않고 사용자의 평점을 그대로 예측치 계산에 사용
>
> -> 사용자의 평가 경향(평균이 높거나 낮은경우 를 고려해서 평가하기도 함)

- 사용자 기반과 아이템 기반을 합쳐서 사용하기도 함



## 4. Matrix Factorization(MF) 기반 추천

추천을 위한 알고리즘은 메모리 기반(memory-based)과 모델 기반(model-based)으로 나눌 수 있다.

> - 메모리 기반 알고리즘
>
> > 추천을 위한 데이터를 모두 메모리에 가지고 있으면서 추천이 필요할때마다 계산을 해서 추천하는 방식
> >
> > 데이터를 모두다 사용할 수 있는 장점이 있지만, 대량의 데이터에서는 계산시간이 오래걸린다.
> >
> > 개별 사용자의 데이터에 집중
>
> - 모델 기반 추천
>
> > 데이터로부터 추천을 위한 모델을 구성 후 모델만 저장해 추천을 하는 방식
> >
> > 대규모 데이터에서 빠른 반응이 가능하다, 그러나 모델을 구축하는 과정에서 많은 계산이 필요
> >
> > 전체 사용자의 평가 패턴으로부터 모델을 구성

행렬 요인화(MF)는 모델 기반 추천 알고리즘







